name: build-and-deploy

on:
  push:
    branches:
      - main
      - '**'
  pull_request:

concurrency:
  group: trello-player-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pages: read
  id-token: none

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      is_main: ${{ steps.metadata.outputs.is_main }}
      is_pr: ${{ steps.metadata.outputs.is_pr }}
      target_folder: ${{ steps.metadata.outputs.target_folder }}
    env:
      PROXY_URL: ${{ vars.PROXY_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set deployment metadata
        id: metadata
        run: |
          set -euo pipefail

          REF_NAME='${{ github.ref_name }}'
          EVENT_NAME='${{ github.event_name }}'
          PR_NUMBER='${{ github.event.pull_request.number }}'

          if [ "$REF_NAME" = "main" ]; then
            echo "is_main=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_main=false" >> "$GITHUB_OUTPUT"
          fi

          if [ "$EVENT_NAME" = "pull_request" ]; then
            echo "is_pr=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_pr=false" >> "$GITHUB_OUTPUT"
          fi

          sanitize() {
            local value="$1"
            value=$(printf '%s' "$value" | tr -c '[:alnum:]._-/' '-')
            value=$(printf '%s' "$value" | sed 's/-\{2,\}/-/g')
            value=${value#-}
            value=${value%-}
            if [ -z "$value" ]; then
              value="branch"
            fi
            printf '%s' "$value"
          }

          if [ "$EVENT_NAME" = "pull_request" ]; then
            SAFE="pr-${PR_NUMBER}"
            SAFE=$(sanitize "$SAFE")
            echo "target_folder=preview/$SAFE" >> "$GITHUB_OUTPUT"
          elif [ "$REF_NAME" = "main" ]; then
            echo "target_folder=" >> "$GITHUB_OUTPUT"
          else
            SAFE=$(sanitize "$REF_NAME")
            echo "target_folder=preview/$SAFE" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare distribution
        env:
          TARGET_FOLDER: ${{ steps.metadata.outputs.target_folder }}
        run: |
          set -euo pipefail

          rm -rf dist
          mkdir -p dist/site

          DEST="dist/site"
          if [ -n "${TARGET_FOLDER}" ]; then
            DEST="dist/site/${TARGET_FOLDER}"
            mkdir -p "$(dirname "$DEST")"
          fi

          rm -rf "$DEST"
          mkdir -p "$DEST"
          cp -R src/trello-power-up/. "$DEST/"

          if [ -n "${PROXY_URL:-}" ]; then
            python3 - "$DEST" "$PROXY_URL" <<'PY'
import json
import pathlib
import sys

dest_dir = pathlib.Path(sys.argv[1])
proxy_url = sys.argv[2]

config_lines = [
    "window.trelloPlayerConfig = window.trelloPlayerConfig || {};\n",
    "window.trelloPlayerConfig.proxyUrl = " + json.dumps(proxy_url) + ";\n",
]

(dest_dir / "trello-player-config.js").write_text("".join(config_lines), encoding="utf-8")
PY
          fi

          touch dist/site/.nojekyll

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error

  deploy:
    needs: build
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download built site
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Deploy production (main → /)
        if: needs.build.outputs.is_main == 'true'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist/site
          clean: true

      - name: Deploy preview (branch/PR → /preview/…)
        if: needs.build.outputs.is_main != 'true'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist/site
          target-folder: ${{ needs.build.outputs.target_folder }}
          clean: false
